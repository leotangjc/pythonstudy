# -*- coding: utf-8 -*-

# 利用倒序切片对 1 - 100 的数列取出：
# * 最后10个数；
# * 最后10个5的倍数。
# a=range(1,101)
# print(a[-10:])
# print (a[4::5][-10:])



# 字符串有个方法 upper() 可以把字符变成大写字母：
# >> > 'abc'.upper()
# 'ABC'
# 但它会把所有字母都变成大写。请设计一个函数，它接受一个字符串，然后返回一个仅首字母变成大写的字符串。
# 提示：利用切片操作简化字符串操作。
# def cg(s):
#     # a=s[:1]
#     # b=upper.a
#     # c=s.insert(0,b)
#     # return c
#     return s[0].upper()+s[1::]
# x='tjc'
# print(cg(x))
# # 切出首字母-转化切出字母-将切出字母替换到首字母


# 请用 for 循环迭代数列 1-100 并打印出 7 的倍数
# a=range(1,101)
# for x in a:
#     if x%7==0:
#         print(x)


# zip()函数可以把两个 list 变成一个 list：
# >> > zip([10, 20, 30], ['A', 'B', 'C'])
# [(10, 'A'), (20, 'B'), (30, 'C')]
# 在迭代['Adam', 'Lisa', 'Bart', 'Paul'] 时，如果我们想打印出名次 - 名字（名次从1开始)，请考虑如何在迭代中打印出来。
#     提示：考虑使用zip()函数和range()函数

#根据已有列表的长度，range出一个对应长度的列表，并将两个list变成一个
